"""empty message

Revision ID: e3539468fdd3
Revises: 
Create Date: 2020-07-26 19:15:08.459571

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e3539468fdd3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cardtype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('color', sa.String(length=128), nullable=False),
    sa.Column('isAccident', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('game',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uniqueCode', sa.Integer(), nullable=False),
    sa.Column('params', sa.Text(), nullable=False),
    sa.Column('roundsCompleted', sa.Integer(), nullable=False),
    sa.Column('isComplete', sa.Boolean(), nullable=True),
    sa.Column('isStarted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uniqueCode')
    )
    op.create_table('card',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('imageURL', sa.Text(), nullable=False),
    sa.Column('typeId', sa.Integer(), nullable=False),
    sa.Column('isCovid', sa.Boolean(), nullable=True),
    sa.Column('damage', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['typeId'], ['cardtype.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gameId', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('money', sa.Integer(), nullable=False),
    sa.Column('hand', sa.Text(), nullable=True),
    sa.Column('neighbourId', sa.Integer(), nullable=True),
    sa.Column('isAdmin', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['gameId'], ['game.id'], ),
    sa.ForeignKeyConstraint(['neighbourId'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('deckentry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cardId', sa.Integer(), nullable=True),
    sa.Column('gameId', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cardId'], ['card.id'], ),
    sa.ForeignKeyConstraint(['gameId'], ['game.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('defence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('defenceCardId', sa.Integer(), nullable=False),
    sa.Column('offenceCardId', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['defenceCardId'], ['card.id'], ),
    sa.ForeignKeyConstraint(['offenceCardId'], ['card.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('discardentry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cardId', sa.Integer(), nullable=False),
    sa.Column('gameId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cardId'], ['card.id'], ),
    sa.ForeignKeyConstraint(['gameId'], ['game.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gameround',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game', sa.Integer(), nullable=False),
    sa.Column('roundNo', sa.Integer(), nullable=False),
    sa.Column('isComplete', sa.Boolean(), nullable=True),
    sa.Column('currentPlayer', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['currentPlayer'], ['player.id'], ),
    sa.ForeignKeyConstraint(['game'], ['game.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roundbattle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('offendingPlayer', sa.Integer(), nullable=True),
    sa.Column('defendingPlayer', sa.Integer(), nullable=False),
    sa.Column('offensiveCard', sa.Integer(), nullable=False),
    sa.Column('defensiveCards', sa.Text(), nullable=False),
    sa.Column('isComplete', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['defendingPlayer'], ['player.id'], ),
    sa.ForeignKeyConstraint(['offendingPlayer'], ['player.id'], ),
    sa.ForeignKeyConstraint(['offensiveCard'], ['card.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roundbattle')
    op.drop_table('gameround')
    op.drop_table('discardentry')
    op.drop_table('defence')
    op.drop_table('deckentry')
    op.drop_table('player')
    op.drop_table('card')
    op.drop_table('game')
    op.drop_table('cardtype')
    # ### end Alembic commands ###
